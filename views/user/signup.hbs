<section class="vh-100">
    <div class="container py-5 h-100">
        <div class="row d-flex align-items-center justify-content-center h-100">
            <div class="col-md-8 col-lg-7 col-xl-6">
                <img style="width: 450px;" src="/img/signup-nobg.png" class="img-fluid" alt="Phone image">
            </div>
            <div class="col-md-7 col-lg-5 col-xl-5 offset-xl-1">
                <form action="/signup" method="post" id="registerForm">
                    <!-- Email input -->
                    <div class="form-outline ">
                        <input type="text" name="Name" id="username" class="form-control form-control-lg mb-2"
                            placeholder="Username" />
                        {{!-- form validation fald --}}

                        <i class="fas fa-check-circle"></i>
                        <i class="fas fa-exclamation-circle"></i>
                        <small>Error message</small>

                        {{!-- form validation ends --}}

                    </div>
                    <div class="form-outline ">
                        <input type="email" name="Email" id="email" class="form-control form-control-lg mb-2"
                            placeholder="Email" />
                        {{!-- form validation fald --}}

                        <i class="fas fa-check-circle"></i>
                        <i class="fas fa-exclamation-circle"></i>
                        <small>Error message</small>

                        {{!-- form validation ends --}}

                    </div>
                    <div class="form-outline">
                        <input type="text" name="Mobile" id="phone" class="form-control form-control-lg mb-2"
                            placeholder="Mobile No:" />
                        {{!-- form validation fald --}}

                        <i class="fas fa-check-circle"></i>
                        <i class="fas fa-exclamation-circle"></i>
                        <small>Error message</small>

                        {{!-- form validation ends --}}

                    </div>

                    <!-- Password input -->
                    <div class="form-outline">
                        <input type="password" name="Password" id="password" class="form-control form-control-lg mb-2"
                            placeholder="Password" />
                        {{!-- form validation fald --}}

                        <i class="fas fa-check-circle"></i>
                        <i class="fas fa-exclamation-circle"></i>
                        <small>Error message</small>

                        {{!-- form validation ends --}}

                    </div>

                    {{#if eFound}}
                    <p style="color: red;">This Email already exists..!!</p>
                    {{/if}}

                    <!-- Submit button -->
                    <button type="submit" class="btn btn-info btn-lg btn-block">Signup</button>
                    <br>

                    <p class="mb-5 pb-lg-2" style="color: #393f81;">Already have an account? <a href="/login"
                            style="color: red;"><b>Login</b></a></p>








                </form>
            </div>
        </div>
    </div>
</section>

<style>
    .form-outline {
        position: relative;
        margin-bottom: 30px;
    }

    .form-outline.success input {
        border-color: #2ecc71;
    }

    .form-outline.error input {
        border-color: #e74c3c;
    }


    .form-outline.success textarea {
        border-color: #2ecc71;
    }

    .form-outline.error textarea {
        border-color: #e74c3c;
    }




    .form-outline i {
        position: absolute;
        top: 14px;
        right: 16px;
        visibility: hidden;
    }

    .form-outline.success i.fa-check-circle {
        color: #2ecc71;
        visibility: visible;
    }


    .form-outline.error i.fa-exclamation-circle {
        color: #e74c3c;
        visibility: visible;
    }



    .form-outline small {
        visibility: hidden;
        position: absolute;
        left: 10px;
    }

    .form-outline.error small {
        color: #e74c3c;
        visibility: visible;
    }
</style>

{{!-- form validation --}}
<script>
    const form = document.getElementById("registerForm")
    const username = document.getElementById("username")
    const email = document.getElementById("email")
    const phone = document.getElementById("phone")
    const password = document.getElementById("password")

    form.addEventListener("submit", (e) => {
        //checking input fields
        checkInput()


        //cheking if all the elements are valid or not
        let isSuccess = form.querySelectorAll(".form-outline.success")
        let formoutline = form.querySelectorAll(".form-outline")

        if (isSuccess) {
            //checking if all the elements have success class
            if (formoutline.length == isSuccess.length) {

            } else {
                e.preventDefault();
            }

        }

    })



    function checkInput() {
        //get values form input feald

        const usernameValue = username.value.trim()
        const emailValue = email.value.trim()
        const phoneValue = phone.value.trim()
        const passwordValue = password.value.trim()



        //validating username
        if (usernameValue === '') {
            setErrorFor(username, 'Username connot be empty');
        } else {
            setSuccessFor(username)
        }
        // validation email

        if (emailValue === '') {
            setErrorFor(email, 'Email connot be empty');
        } else if (!isEmail(emailValue)) {
            setErrorFor(email, 'Email is not valid')
        } else {
            setSuccessFor(email)
        }

        //validating phone
        if (phoneValue === '') {
            setErrorFor(phone, 'Number connot be empty');
        } else if (isNaN(phoneValue) || phoneValue.length != 10) {
            setErrorFor(phone, 'Please enter a valid phone number');
        }
        else {
            setSuccessFor(phone)
        }

        //validating password

        if (passwordValue === '') {
            setErrorFor(password, 'Password cannot be blank');
        } else if (passwordValue.length < 8) {
            setErrorFor(password, 'Password must be minimum 8 characters');
        }
        else {
            setSuccessFor(password);
        }


    }





    //setting error
    function setErrorFor(input, message) {
        const formoutline = input.parentElement;
        const small = formoutline.querySelector('small');
        small.innerText = message;
        formoutline.className = 'form-outline error'
    }


    //setting succress
    function setSuccessFor(input) {
        const formoutline = input.parentElement;
        formoutline.className = 'form-outline success'
    }



    // email validation
    function isEmail(email) {
        return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email);
    }
</script>